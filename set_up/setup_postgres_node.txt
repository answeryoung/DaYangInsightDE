Following this repo
https://github.com/snowplow/snowplow/wiki/Setting-up-PostgreSQL
Here is a summary
 

As the superuser and configure pgsql
$ sudo su
$ cd /var/lib/pgsql/data

Then, edit pg_hba.conf and postgresql.conf

for pg_hba.conf
name some users with md5 authentication method like
># TYPE  DATABASE        USER            ADDRESS                 METHOD
>host    all             $a_user          your-vpc/28               md5
>host    all             $b_user          your-vpc/28               md5
>host    all             $c_user          your-vpc/28               md5

host     all             all             127.0.0.1/32           md5        
host     all             all             ::1/128                md5 


for postgresql.conf (from line 59 and on, in my case)
>listen_address = '*'
>port = $psqlPort (defult is 5432)
>max_connections = 100
and done editing.

Then, set-up auto start postgresql as a service.
(You will likly need to restart the service,
if you change those two files in the future.) 
$ sudo systemctl enable postgresql
$ sudo systemctl start postgresql
($ sudo systemctl restart postgresql)

Now, we create the users and set their passwords in the psql console
To enter the postgreSQL console
$ sudo -u postgres -i
$ psql

# In the console, (the ; at the end of each statments is imperative)
postgres=# CREATE USER $db_super_user SUPERUSER;
postgres=# ALTER USER $db_super_user WITH PASSWORD '"$db_su_pwd"';
postgres=# CREATE USER $db_owner NOSUPERUSER;
postgres=# ALTER USER $db_owner WITH PASSWORD '"$db_owner_pwd"';
postgres=# CREATE USER doe PASSWORD 'asdf';
postgres=# CREATE DATABASE $dbName WITH OWNER $db_owner;
To list all the users
postgres=# \du+
To list all the databases and tables
postgres=# \l
To quit the console peacefully
postgres=# \q

And the set-up is done.
To test the connection from another node (e.g., your spark master node)
psycopg2-bin package is needed for using python
In python console
$ python3
>>> import psycopg2 
>>> connection = psycopg2.connect(user = "$db_super_user ",
...     password = "$apwd",
...     host = "0.0.0.$psql",
...     port = "$psqlPort",
...     database = "$dbName")

Good!
Get dangerous!!
