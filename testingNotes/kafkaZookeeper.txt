## testings for a three-broker kafka cluster with a single zookerper node
###start zookeeper node first then the brokers

$zookeeper-shell.sh localhost:$zookeeperPort ls /brokers/ids

$ kafka-topics.sh --create --bootstrap-server \
$   {kafkaIps[0]}:$kafkaPort,{kafkaIps[1]}:$kafkaPort,{kafkaIps[2]}:$kafkaPort --topic test
$ kafka-topics.sh --create --zookeeper localhost:2181 \
$    --topic test1 --partitions 1 --replication-factor 3 

$ kafka-topics.sh --describe --bootstrap-server ${kafkaIps[0]}:$kafkaPort --topic test
$ kafka-topics.sh --describe --zookeeper localhost:2181

$ kafka-topics.sh --create --bootstrap-server ${kafkaIps[0]}:$kafkaPort --topic test2
$ kafka-topics.sh --describe --bootstrap-server ${kafkaIps[1]}:$kafkaPort --topic test2
$ kafka-topics.sh --list --bootstrap-server ${kafkaIps[0]}:$kafkaPort

$ kafka-console-producer.sh --broker-list ${kafkaIps[0]}:$kafkaPort,${kafkaIps[1]}:$kafkaPort \ 
    --topic test 
#### --broker-list should be replaced by --bootstrap-server in some distributions

$ kafka-console-consumer.sh --bootstrap-server ${kafkaIps[2]}:$kafkaPort \
    --from-beginning --topic test
#### note the messages are pushed to and pulled from different brokers

## zookeeper and kafka are working well







